#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø–∞—Ä—Å–µ—Ä–∞ - –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python quick_test.py [URL]
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.abspath(os.path.dirname(__file__)))

from app.services.google_sheets_api import fetch_google_sheet_stock


async def quick_test(url=None):
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ–¥–Ω–æ–≥–æ URL"""

    if not url:
        # URL –∏–∑ –≤–∞—à–µ–≥–æ –ø—Ä–∏–º–µ—Ä–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ ID –≤ –æ–¥–Ω–æ–π —è—á–µ–π–∫–µ
        test_urls = ["https://www.avito.ru/moskva/odezhda_obuv_aksessuary/letniy_kostyum_fred_perry_7352757129"
        ]

        print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º URL —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ ID –≤ —è—á–µ–π–∫–µ:")
        for test_url in test_urls:
            print(f"\nüìç {test_url}")
            result = await fetch_google_sheet_stock(test_url)
            if result:
                print("‚úÖ –ù–∞–π–¥–µ–Ω–æ!")
                await asyncio.sleep(10)
                print(result)
            else:
                print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ")
            print("-" * 50)
    else:
        print(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {url}")
        result = await fetch_google_sheet_stock(url)

        if result:
            print("\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç:")
            print(result)

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
            filename = "test_result.json"
            with open(filename, 'w', encoding='utf-8') as f:
                f.write(result)
            print(f"\nüíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ {filename}")
        else:
            print("\n‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")


if __name__ == "__main__":
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    from dotenv import load_dotenv

    load_dotenv()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
    url = sys.argv[1] if len(sys.argv) > 1 else None

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    asyncio.run(quick_test(url))