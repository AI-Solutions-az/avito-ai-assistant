from fastapi import APIRouter, BackgroundTasks
from fastapi.responses import JSONResponse
from app.models.schemas import WebhookRequest
from app.services.avito_api import send_message, get_ad, get_user_info
from app.services.gpt import process_message
import re
from app.services.telegram_bot import send_alert
from app.redis_db import add_chat, chat_exists
import logging
from app.services.logs import send_log

# –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger("uvicorn")

router = APIRouter()

# –í—ã–Ω–µ—Å–µ–Ω–∏–µ –¥–∂–æ–±—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é, —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª–æ –∫–∞–∫ –Ω–∞–¥–æ
def process_and_send_response(message: WebhookRequest):
    send_log(message=f"1. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {message.payload.value.user_id}")
    user_name, user_url = get_user_info(message.payload.value.user_id, message.payload.value.chat_id)
    send_log(message=f"2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ–±—ä—è–≤–ª–µ–Ω–∏–∏ {message.payload.value.item_id}")
    ad_url = get_ad(message.payload.value.user_id, message.payload.value.item_id)
    send_log(message=f"3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    response = process_message(message.payload.value.author_id, message.payload.value.chat_id,
                               message.payload.value.content.text, ad_url)
    if response:
        send_log(f"4. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è", response)

        send_message(message.payload.value.user_id, message.payload.value.chat_id, response)
        send_log(message="5. –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª")
        send_alert(f"üíÅ‚Äç‚ôÇÔ∏è {user_name}: {message.payload.value.content.text}\n"
                   f"ü§ñ –ë–æ—Ç: {response}\n"
                   f"_____\n\n"
                   f"üí¨ –î–∏–∞–ª–æ–≥: https://www.avito.ru/profile/messenger/channel/{message.payload.value.chat_id}")
        # 5. –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º, –µ—Å–ª–∏ –µ—Å—Ç—å —Å–ª–æ–≤–æ –º–µ–Ω–µ–¥–∂–µ—Ä –∏–ª–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä
        if (re.search('–æ–ø–µ—Ä–∞—Ç–æ—Ä', message.payload.value.content.text, re.IGNORECASE) or
                re.search('–º–µ–Ω–µ–¥–∂–µ—Ä', message.payload.value.content.text, re.IGNORECASE)):
            send_log(message="5.1. –ü–µ—Ä–µ–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞!")
            send_alert(f"‚ÄºÔ∏è–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n"
                       f"–û–±—ä—è–≤–ª–µ–Ω–∏–µ: {ad_url}\n"
                       f"–ö–ª–∏–µ–Ω—Ç {user_name}: {user_url}\n"
                       f"_____\n\n"
                       f"üí¨–î–∏–∞–ª–æ–≥: https://www.avito.ru/profile/messenger/channel/{message.payload.value.chat_id}")
            send_log(message="5.2. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π")
            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ —Å –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
            add_chat(message.payload.value.chat_id)
    else:
        return None

@router.post("/chat")
def chat(message: WebhookRequest, background_tasks: BackgroundTasks):
    send_log(message="–ü–û–õ–£–ß–ï–ù –ù–û–í–´–ô –ó–ê–ü–†–û–° –û–¢ –ê–í–ò–¢–û")
    message_text = message.payload.value.content.text
    chat_id = message.payload.value.chat_id
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —á–∞—Ç–∞ –≤ —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤ —Å –≤—ã–∫–ª—é—á–µ–Ω–Ω—ã–º –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–æ–º
    if chat_exists(chat_id):
        send_log(message="0. –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω –≤ —á–∞—Ç–µ")

        return JSONResponse(content={"ok": True}, status_code=200)
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ—Ç –º–µ–Ω—è —Å–∞–º–æ–≥–æ
    if message.payload.value.author_id == message.payload.value.user_id:
        if (re.search('–æ–ø–µ—Ä–∞—Ç–æ—Ä', message_text, re.IGNORECASE) or
                re.search('–º–µ–Ω–µ–¥–∂–µ—Ä', message_text, re.IGNORECASE)):
            send_log(message="4.3. –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∞–º–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —á–∞—Ç-–±–æ—Ç–æ–º")

            ad_url = get_ad(message.payload.value.user_id, message.payload.value.item_id)
            user_name, user_url = get_user_info(message.payload.value.user_id, message.payload.value.chat_id)
            send_alert(f"‚ÄºÔ∏è–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–Ω–∏–º–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞:\n"
                       f"–û–±—ä—è–≤–ª–µ–Ω–∏–µ: {ad_url}\n"
                       f"–ö–ª–∏–µ–Ω—Ç {user_name}: {user_url}\n"
                       f"_____\n\n"
                       f"üí¨ –î–∏–∞–ª–æ–≥: https://www.avito.ru/profile/messenger/channel/{message.payload.value.chat_id}")
            send_log(message="4.4. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞ –≤ —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π")

            add_chat(chat_id)
        else:
            send_log(message="0. –í–µ–±—Ö—É–∫ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–∞–º–æ–≥–æ —Å–µ–±—è")

        return JSONResponse(content={"ok": True}, status_code=200)

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–¥–∞ –≤ —Ñ–æ–Ω–µ
    background_tasks.add_task(process_and_send_response, message)

    return JSONResponse(content={"ok": True}, status_code=200)